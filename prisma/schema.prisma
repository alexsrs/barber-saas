// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Barber SaaS - schema.prisma
// Estrutura inicial das tabelas principais

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Barbearia {
  id           String      @id @default(uuid())
  nome         String
  telefone     String
  endereco     String
  foto         String?     // URL da foto
  cnpj         String?     @db.VarChar(18)
  descricao    String?     @db.VarChar(200)
  usuario      String      // email do usuário
  createdAt    DateTime    @default(now())
  servicos     Servico[]
  agendamentos Agendamento[]
}

model Servico {
  id           String      @id @default(uuid())
  nome         String
  preco        Float
  duracao      Int         // duração em minutos
  barbearia    Barbearia   @relation(fields: [barbeariaId], references: [id])
  barbeariaId  String
  agendamentos Agendamento[]
}

model Cliente {
  id           String      @id @default(uuid())
  nome         String
  telefone     String
  email        String
  agendamentos Agendamento[]
}

model Agendamento {
  id           String      @id @default(uuid())
  data         DateTime
  status       String      // ex: 'pendente', 'confirmado', 'cancelado'
  cliente      Cliente     @relation(fields: [clienteId], references: [id])
  clienteId    String
  servico      Servico     @relation(fields: [servicoId], references: [id])
  servicoId    String
  barbearia    Barbearia   @relation(fields: [barbeariaId], references: [id])
  barbeariaId  String
}
